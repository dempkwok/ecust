<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN""http://www.w3.org/TR/html4/loose.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <title>PaperTest</title>
    <style type="text/css">
        user_icon
        {
            color: #FFFFFF;
        }
        html
        {
            overflow-x: hidden;
            overflow-y: auto;
        }
        body, td, th
        {
            font-family: "微软雅黑";
            font-size: 12px;
        }
        h1, h2, h3, h4, h5, h6
        {
            font-family: "宋体";
        }
        p
        {
            margin-bottom: 10px;
        }
        demo_padding
        {
            line-height: 30px;
        }
        .zhengwen
        {
            padding-right: 15px;
            padding-left: 5px;
            padding-bottom: 100px;
            font-size: 13px;
            line-height: 20px;
            color: #666666;
        }
        .zhengwencenter
        {
            padding-right: 15px;
            padding-left: 0px;
            margin-bottom: 10px;
            font-size: 13px;
            line-height: 20px;
            color: #666666;
            text-align: center;
        }
        .neikuang
        {
            background-color: #EBEBEB;
            border: 1px solid #999999;
            padding-right: 10px;
            padding-left: 10px;
            margin-top: 10px;
            margin-left: 25px;
            width: 300px;
        }
        .shubu
        {
            height: 20px;
            width: 20px;
            margin-left: 25px;
            background-color: #FFFFFF;
            border: 1px solid #999999;
            text-align: center;
            vertical-align: middle;
            display: block;
            color: #666666;
        }
        a.red:link
        {
            color: #FF0000;
        }
        a.red:visited
        {
            color: #FF0000;
        }
        a.red:hover
        {
            color: #000000;
        }
        a.red:active
        {
            color: #000000;
        }
        a.orange:link
        {
            color: #FF6600;
        }
        a.orange:visited
        {
            color: #FF6600;
        }
        a.orange:hover
        {
            color: #000000;
        }
        a.orange:active
        {
            color: #000000;
        }
        a.dark:link
        {
            color: #666666;
        }
        a.dark:visited
        {
            color: #666666;
        }
        a.dark:hover
        {
            color: #000000;
        }
        a.dark:active
        {
            color: #000000;
        }
        a.pagelink:hover
        {
            color: #000000;
        }
        a.pagelink:active
        {
            color: #000000;
        }
        .green
        {
            color: #008000;
        }
        .gray
        {
            color: #666666;
        }
        .red
        {
            color: #FF0000;
        }
        .orange
        {
            color: #FF6600;
        }
        a
        {
            text-decoration: none;
        }
    </style>
</head><body><div class="zhengwen"><div><span style="margin-left: 25px"></span>[<a class="pagelink"href="paper_1.htm">首页</a>&nbsp<a class="pagelink" href="paper_2.htm">上一页</a>&nbsp<a class="pagelink" href="paper_4.htm">下一页</a>&nbsp<a class="pagelink" href="paper_4.htm">尾页</a>&nbsp页码：3/4页]</div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">255</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><a href="../sentence_detail/519.htm" target="right" class="red">    public String getFeatureName();</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">256</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><a href="../sentence_detail/520.htm" target="right" class="red">    public String getFieldName();</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">257</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><a href="../sentence_detail/521.htm" target="right" class="orange">//传入BufferImage对象对图像进行特征计算提取。</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">258</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><a href="../sentence_detail/522.htm" target="right" class="red">    public void extract(BufferedImage image);</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">259</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">    public double[] getDoubleHistogram(); </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">260</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">//获取相似度 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">261</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><a href="../sentence_detail/525.htm" target="right" class="orange">    float getDistance(IImageFeature feature);</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">262</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">//获取专利特征值字符串表示。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">263</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">    String getStringRepresentation(); </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">264</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">//通过字符串初始化特征矩阵 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">265</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">    void setStringRepresentation(String featureVector); </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">266</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">267</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">4.2.2 颜色、形状、纹理 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">268</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">以本系统中使用的颜色特征表示方式颜色自相关直方图为例， </span><span class="green">继承并实现IImageFeature接口的类AutoColorCorrelogram主要实现了： </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">269</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">（1）extract(BufferedImage image)，实现细节为： </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">270</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">public void extract(BufferedImage bi) { </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">271</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">final Raster r = bi.getRaster(); </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">272</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">int[][][] hsvImage = hsvImage(r); </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">273</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">extract(hsvImage); } </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">274</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">（2）getDistance(IImageFeature feature)，使用的是矩阵相交距计算得到特征值的相似度。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">275</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">public float getDistance(IImageFeature vd) { </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">276</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">if (! </span><span class="green">(vd instanceof AutoColorCorrelogram)) return -1; </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">277</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">return jsd(((AutoColorCorrelogram) vd). </span><span class="green">correlogram); </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">278</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">（3）getStringRepresentation()，获取专利特征值字符串表示。 </span><a href="../sentence_detail/545.htm" target="right" class="orange">则将矩阵（二维数据）correlogram表示为&quot;acc 4 5.0 3.0 3.0 3.0 0.0 0.0 0.0 0.0 3.0 1.0 0.0 0.0 12.0 11.0 10.0 9.0 0.0 0.0&hellip;&hellip;&rdquo; 的形式。</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">279</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">public String getStringRepresentation() { </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">280</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">int maxDistance = this.distanceSet.length; </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">281</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">StringBuilder sb = new StringBuilder(numBins * maxDistance); </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">282</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">//writeen by dempk for add "acc" to StringRepresentation </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">283</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><a href="../sentence_detail/550.htm" target="right" class="red">sb.append("acc");</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">284</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">sb.append(' '); </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">285</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">sb.append(maxDistance); </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">286</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">sb.append(' '); </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">287</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">for (int i = 0; i &lt; correlogram.length; </span><span class="green"> i++) { </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">288</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">for (int j = 0; j &lt; correlogram[i].length; </span><span class="green"> j++) { </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">289</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">sb.append(correlogram[i][j]); </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">290</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">sb.append(' '); </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">291</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">          } </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">292</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">293</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><a href="../sentence_detail/561.htm" target="right" class="red">return sb.toString().trim();</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">294</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">295</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">（4）setStringRepresentation(String featureVector)， </span><span class="green">将&quot;acc 4 5.0 3.0 3.0 3.0 0.0 0.0 0.0 0.0 3.0 1.0 0.0 0.0 12.0 11.0 10.0 9.0 0.0 0.0&hellip;&hellip;&rdquo;形式的字符串还原成二维数组， </span><span class="green">表示一个图像的特征信息。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">296</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">4.2.3 特征融合封装 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">297</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">ContentBasedImageRetrieval类封装了上面介绍的颜色、形状、纹理特征提取类， </span><span class="green">并进行了获取图像特征值并进行字符串格式化、通过特征值字符串初始化相应的封装特征对象、相似度归一化并定义了特征融合方式等操作。 </span><span class="green">下面简单介绍这些封装。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">298</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">（1）private static float MAX_COLOR = 1等静态字段，定义了归一化时候的阈值，方便更直观的表示相似度， </span><span class="green">而不是直接使用欧氏距离或者矩阵相交距表示。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">299</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">（2）public String getSourceFeature()，获取图像特征字符串表示。 </span><span class="green">使用&quot;###&rdquo;隔开。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">300</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">（3）public float getMixDistance()，获取融合特征相似度，通过分别获取颜色、形状、纹理相似度加权的形式计算得到， </span><span class="green">计算公式3-7。 </span><span class="green">下面是一种特征相似度的归一化过程。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">301</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">private float getDistance(int type) { </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">302</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">// 1 color distance // 2 shape // 4 texture </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">303</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">switch (type) { </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">304</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">case 1: </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">305</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">float sc = sColorFeature. </span><span class="green">getDistance(dColorFeature); </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">306</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">return sc &gt; MAX_COLOR ? </span><span class="green"> 0 : (MAX_COLOR - sc) / MAX_COLOR; </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">307</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">case 2://省略 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">308</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">case 4://省略 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">309</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">310</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">4.3 文本检索与检索结果 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">311</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">文本检索提供对专利号，专利名，专利描述，申请号，申请日期，申请人，发明人，公开号，公开日期，颁证日，主分类，次级分类等字段的模糊匹配检索方式。 </span><span class="green">用户将合法的检索条件提交给Web服务器制动的Servlet时，Servlet获取条件参数，根据条件参数传递的值初始化SearchInfo对象， </span><span class="green">并通过PatentDAO提供的SearchPatent方法对数据库中的记录进行模糊匹配检索。 </span><a href="../sentence_detail/590.htm" target="right" class="orange">下图为检索条件为专利名输入&quot;椅子&rdquo;，专利号，专利描述，申请号，申请日期，申请人，发明人，公开号，公开日期，颁证日，主分类，次级分类等为空时的检索结果。</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">312</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">图4-1 搜索结果列表 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">313</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">并可以通过专利编号链接访问专利的详细信息， </span><span class="green">例如查看专利1000002354的链接可以看到信息专利号： 1000002354，专利名：椅子（2），专利描述：左视图与右视图对称，省略左视图， </span><span class="green">申请号： 02358450.5，申请日期： 2002-07-19，申请人：蔡演国，发明人：蔡演国，公开号： CN3279274， </span><span class="green">公开日期：2003-02-26，颁证日期：1991-01-01的外观专利详细信息，以及其图像显示。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">314</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">4.4 专利库构建 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">315</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">分为两种构建方式，人工上传和访问国家专利局官网通过爬虫获取需要的信息，保存到本地数据库和文件系统中。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">316</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">4.4.1 专利上传 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">317</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">专利上传操作具体实现为： </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">318</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">（1）用户提交信息合法性验证，代码略。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">319</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">（2）服务器将图像进行本地存储： </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">320</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">	// 1.upload images </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">321</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">		List&lt;PatentViewItem&gt; views = new ArrayList&lt;PatentViewItem&gt;(); </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">322</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">		// 图片上传路径 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">323</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">		String uploadPath = request.getSession(). </span><span class="green">getServletContext() </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">324</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">				.getRealPath("/"). </span><span class="green">replace("DesignPatent", "img") </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">325</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">				. </span><span class="green">replace("DesignPetent", "img"); </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">326</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">		// 图片临时上传路径 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">327</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">		String tempPath = request.getSession(). </span><span class="green">getServletContext() </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">328</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">				.getRealPath("/")	+ "cache/"; </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">329</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">		// 文件夹不存在就自动创建： </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">330</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><a href="../sentence_detail/616.htm" target="right" class="red">		if (!new File(uploadPath).isDirectory())</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">331</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><a href="../sentence_detail/617.htm" target="right" class="red">			new File(uploadPath).mkdirs();</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">332</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><a href="../sentence_detail/618.htm" target="right" class="red">		if (!new File(tempPath).isDirectory())</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">333</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><a href="../sentence_detail/619.htm" target="right" class="red">			new File(tempPath).mkdirs();</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">334</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">（3）插入外观专利信息，即插入文本信息，代码为： </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">335</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">PatentDAO p = new PatentDAO(); </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">336</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">String pid = p.InsertPatent(patent); </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">337</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">（4）通过数据访问对象将创建的外观专利信息插入数据库，返回插入的专利编号自增值，通过自增值插入对应的图像信息。 </span><span class="green">将图像信息通过浏览器返回给用户，提示插入成功或插入错误等相关信息。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">338</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">代码如下： </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">339</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">// 3.添加专利图片信息 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">340</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">if (!pid.equals("0")) { </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">341</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">for (PatentViewItem pv : views) { </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">342</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">pv.setPId(pid); </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">343</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">p.InsertPatentView(pv); </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">344</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">345</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">request. </span><span class="green">setAttribute("result", "插入成功专利编号为" + pid); </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">346</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">} else </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">347</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">	request. </span><span class="green">setAttribute("result", "插入失败,请检查输入信息正确且是否存在重复"); </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">348</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">		RequestDispatcher rder = request. </span><span class="green">getRequestDispatcher("/PatentUpload.jsp"); </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">349</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><a href="../sentence_detail/638.htm" target="right" class="red">		rder.forward(request, response);</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">350</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">如图4-2所示演示专利上传过程：输入专利相关信息，选择本地文件系统图片，点击添加。 </span><span class="green">插入成功后会提示&quot;插入成功专利编号为XXXXXXXX&rdquo;。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">351</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">图4-2 专利上传演示 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">352</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">4.4.2 专利获取 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">353</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">public void PatentRepatileWork() { </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">354</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">		//省略部分代码 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">355</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">		//&hellip;.. </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">356</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">		int count = 0; </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">357</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">		// 解析html 获取申请号 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">358</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">		while (page &gt;= pagestart) { </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">359</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">			//申请号列表 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">360</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">			patentList.clear(); </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">361</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">			patentList.addAll(ParserList(html)); </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">362</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">			// 2 遍历申请号列表 Get相应的html页面 解析得到一个专利的详细信息 并插入数据库 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">363</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">			for (String s : patentList) {&hellip;&hellip;} </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">364</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">		} </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">365</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">	} </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">366</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">其中解析专利详细信息到数据库并获取图片保存到本地文件系统的方法为ParserDetail()，其实现为（省略部分代码）： </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">367</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">private void ParserDetail(String html) { </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">368</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">Parser parser = Parser. </span><a href="../sentence_detail/659.htm" target="right" class="red">createParser(html, "UTF-8");</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">369</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">// 过滤基本信息 td 标签 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">370</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">NodeFilter tagFilter = new TagNameFilter("td"); </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">371</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">// 过滤图片信息 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">372</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">NodeFilter imgFilter = new TagNameFilter("img"); </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">373</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">4.5 图像检索 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">374</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">图像检索的实现包括图像特征导出（导出格式、导出位置以及导出范围）、普通图像检索、分布式图像检索实现（MapReduce程序实现）。 </span><span class="green">下面依次介绍这些功能的具体实现。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">375</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">4.5.1 图像特征导出 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">376</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">如前面分析设计部分的定义， </span><span class="green">导出格式应该为&quot;图像文件名@外观专利编号@颜色特征###形状特征###纹理特征&rdquo;的一项外观专利图像特征信息占据一行的字符串形式。 </span><span class="green">导出使用PatentDAO中的SearchView(String view, String limit, String row) 方法，获取列表。 </span><span class="green">剩余的工作就是使用流输出到文本文件中。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">377</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">4.5.2 图像检索 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">378</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">图像检索类主要提供给Servlet调用，调用特定的方法可以执行不同的图像检索方式。 </span><span class="green">图像检索类如写所描述， </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">379</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">public class SearchImage { </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">380</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">	List&lt;PatentInfos&gt; SearchImageFromDatabase(String imagePath) {} </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">381</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">	List&lt;PatentInfos&gt; SearchImageWithHadoop(String imageName) {} </span><p></p></div><div><span style="margin-left: 25px"></span>[<a class="pagelink"href="paper_1.htm">首页</a>&nbsp<a class="pagelink" href="paper_2.htm">上一页</a>&nbsp<a class="pagelink" href="paper_4.htm">下一页</a>&nbsp<a class="pagelink" href="paper_4.htm">尾页</a>&nbsp页码：3/4页]</div> </div><div class="zhengwencenter"><p>检测报告由<a href="http://www.papertest.org" target="_blank">PaperTest</a>文献相似度检测系统生成</p><p>Copyright © 2007-2014 PaperTest.</p></div><div style="margin-bottom: 400px"></div></body></html>