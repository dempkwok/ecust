<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN""http://www.w3.org/TR/html4/loose.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <title>PaperTest</title>
    <style type="text/css">
        user_icon
        {
            color: #FFFFFF;
        }
        html
        {
            overflow-x: hidden;
            overflow-y: auto;
        }
        body, td, th
        {
            font-family: "微软雅黑";
            font-size: 12px;
        }
        h1, h2, h3, h4, h5, h6
        {
            font-family: "宋体";
        }
        p
        {
            margin-bottom: 10px;
        }
        demo_padding
        {
            line-height: 30px;
        }
        .zhengwen
        {
            padding-right: 15px;
            padding-left: 5px;
            padding-bottom: 100px;
            font-size: 13px;
            line-height: 20px;
            color: #666666;
        }
        .zhengwencenter
        {
            padding-right: 15px;
            padding-left: 0px;
            margin-bottom: 10px;
            font-size: 13px;
            line-height: 20px;
            color: #666666;
            text-align: center;
        }
        .neikuang
        {
            background-color: #EBEBEB;
            border: 1px solid #999999;
            padding-right: 10px;
            padding-left: 10px;
            margin-top: 10px;
            margin-left: 25px;
            width: 300px;
        }
        .shubu
        {
            height: 20px;
            width: 20px;
            margin-left: 25px;
            background-color: #FFFFFF;
            border: 1px solid #999999;
            text-align: center;
            vertical-align: middle;
            display: block;
            color: #666666;
        }
        a.red:link
        {
            color: #FF0000;
        }
        a.red:visited
        {
            color: #FF0000;
        }
        a.red:hover
        {
            color: #000000;
        }
        a.red:active
        {
            color: #000000;
        }
        a.orange:link
        {
            color: #FF6600;
        }
        a.orange:visited
        {
            color: #FF6600;
        }
        a.orange:hover
        {
            color: #000000;
        }
        a.orange:active
        {
            color: #000000;
        }
        a.dark:link
        {
            color: #666666;
        }
        a.dark:visited
        {
            color: #666666;
        }
        a.dark:hover
        {
            color: #000000;
        }
        a.dark:active
        {
            color: #000000;
        }
        a.pagelink:hover
        {
            color: #000000;
        }
        a.pagelink:active
        {
            color: #000000;
        }
        .green
        {
            color: #008000;
        }
        .gray
        {
            color: #666666;
        }
        .red
        {
            color: #FF0000;
        }
        .orange
        {
            color: #FF6600;
        }
        a
        {
            text-decoration: none;
        }
    </style>
</head><body><div class="zhengwen"><div><span style="margin-left: 25px"></span>[<a class="pagelink"href="paper_1.htm">首页</a>&nbsp<a class="pagelink" href="paper_1.htm">上一页</a>&nbsp<a class="pagelink" href="paper_3.htm">下一页</a>&nbsp<a class="pagelink" href="paper_4.htm">尾页</a>&nbsp页码：2/4页]</div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">128</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><a href="../sentence_detail/269.htm" target="right" class="red">字段名	描述	类型	是否为空	是否为主键</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">129</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">CSName	分类编号	varchar(16)	否	是 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">130</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">CSDescribe	分类描述	varchar(16)	否	否 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">131</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">专利信息表，各个字段及其定义如表3-4及其内容所示。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">132</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">表3-4 专利信息表 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">133</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><a href="../sentence_detail/274.htm" target="right" class="red">字段名	描述	类型	是否为空	是否为主键</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">134</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">PId	专利号	int(14)	否	是 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">135</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><a href="../sentence_detail/276.htm" target="right" class="red">PName	专利名称	varchar(20)	否	否</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">136</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><a href="../sentence_detail/277.htm" target="right" class="orange">PDescribe	摘要	varchar(50)	是	否</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">137</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">ApplyId	申请号	varchar(50)	否	否 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">138</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><a href="../sentence_detail/279.htm" target="right" class="red">ApplyDate	申请日期	timestamp	否	否</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">139</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><a href="../sentence_detail/280.htm" target="right" class="red">Applicant	申请人	varchar(50)	否	否</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">140</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">Applicants	申请组织	varchar(50)	否	否 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">141</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><a href="../sentence_detail/282.htm" target="right" class="red">Inventor	发明人	varchar(50)	否	否</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">142</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">OpenId	公开号	varchar(50)	否	否 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">143</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">OpenDate	公开日期	timestamp	否	否 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">144</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">CertificationDate	办证日期	timestamp	否	否 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">145</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">CFId	一级分类号	varchar(16)	否	否 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">146</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">CSId	二级分类号	varchar(16)	否	否 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">147</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">专利图像表，如表3-5所示。 </span><span class="green">由于考虑到每个专利都有且只有最多六张（设计系统时候做出的约定）专利图像，因此将专利图像表做了分表处理。 </span><a href="../sentence_detail/290.htm" target="right" class="orange">主视图，后视图，俯视图，仰视图，左视图，右视图都单独使用一张表。结构一样。</a><a href="../sentence_detail/291.htm" target="right" class="orange">这样方便插入，可以在大数据量的情况下提高插入速度。</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">148</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">表3-5 专利图像表 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">149</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><a href="../sentence_detail/293.htm" target="right" class="red">字段名	描述	类型	是否为空	是否为主键</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">150</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">PId	专利编号	varchar(16)	否	是 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">151</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">ViewPath	图像存放路径	varchar(16)	否	否 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">152</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><a href="../sentence_detail/296.htm" target="right" class="orange">FingerPrint	特征值	text	是	否</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">153</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">3.3.2 数据模型设计 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">154</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">图3-4及其内容所示数据模型与数据访问对象类关系图，专利具体信息的获取、插入，专利特定信息的获取， </span><span class="green">专利图像信息的获取等操作都通过数据访问对象定义的方法进行操作。 </span><span class="green">图像检索对象模型，如图中PatentInfo 类图，从特征库中提取专利信息创建检索对象，三个字段Pid，FingerPrint， </span><span class="green">Distance分别表示专利的专利编号，专利特征值，专利与用户提交的检索图片的特征值距离。 </span><span class="green"> Pid与FingerPrint都是通过数据库中外观专利图像信息表进行获取的，而表示中间未处理相似度的特征值距离， </span><a href="../sentence_detail/303.htm" target="right" class="orange">则是通过对图像检索对象进行特征匹配时候得到的。</a><span class="green">系统定义图像检索对象对于文本检索过程不存在相似度定义，因为对于文本难以定义标准表示检索的文本信息与外观专利的相似程度。 </span><span class="green">因此对于文本检索过程定义所有的特征值距离（中间相似度）为1。 </span><span class="green">而对于图像检索过程，作为中间处理对象的图像检索对象，相似度存储的是两个特征值的欧式距离等为标准化的特征值， </span><span class="green">如某两个图像的颜色相似度进行计算得到的是42.14515，此结果显然不适合直接呈现给用户。 </span><span class="green">此对象不是直接作为结果呈现给用户的。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">155</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">图3-4 数据模型数据访问对象关系类图 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">156</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">图像检索结果模型如图PatentInfos类图，检索结果与检索对象字段类型一样，但是含义不同。 </span><span class="green">原本打算复用同一个类，但是这样会造成开发上的误解。 </span><span class="green">因此重新定义一个结构相同的类，表示图像检索结果。 </span><span class="green">该结果将作为返回值传给浏览器，用户通过浏览器看到检索结果。 </span><span class="green">三个字段Pid，Discribe，Similarity分别表示专利的专利编号，检索描述，相似度。 </span><span class="green">检索描述字段是为了检索过程中出现的特殊检索结果准备的，相似度则是更直观的体现检索图像与特征库中的图像的相似度，这是由于对于不同的特征， </span><a href="../sentence_detail/316.htm" target="right" class="orange">如颜色特征与形状特征，其Distance的取值范围是不一样的，因此通过设置一个阈值，计算百分比，能更好的表现检索图像与特征库中的图像的相似度。</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">157</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">外观专利图像所有信息类图，如图PatentView类图，上传专利的时作为存放专利图像路径信息的对象。 </span><span class="green">包含的字段为Pid 以及各个视图的路径信息。。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">158</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">计算单个图像的特征值的时候对象信息，如图中PatentViewItem类图，字段含义分别为View 为专利图像类型（左视图，右视图等）， </span><span class="green">Pid是专利编号，FileName为专利存放文件名。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">159</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">SearchInfo为查找专利时的查找条件，如图中SearchInfo类图。 </span><a href="../sentence_detail/322.htm" target="right" class="red">主要提供属性的Getter()，Setter()方法。</a><span class="green">作用是用户提交文本检索时，将用户提交的检索条件进行存储，并对格式进行标准化判断。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">160</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">PatentInfoAll存放了专利的所有信息，如图中PatentInfoAll类图，该类在专利插入，获取专利所有信息，显示专利详细内容的时候使用。 </span><span class="green">用户提交一个专利信息插入请求，根据用户输入的专利信息创建一个PatentInfoAll对象，存储专利的信息以及专利的图像路径信息，然后进行插入。 </span><span class="green">当用户查看某个专利的具体信息时，则会获取用户提交的某个专利的专利编号，获取PatentInfoAll对象， </span><span class="green">Web服务器根据PatentInfoAll对象将特定的网页信息反馈给用户，并根据PatentInfoAll的存放的图像信息，转换成图像的网络地址。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">161</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">3.3.3 数据访问对象层设计 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">162</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">主要提供的类为 LoginDAO，PatentDAO以及ClassificationDAO，其中LiginDAO为用户注册登录接口， </span><span class="green">PatentDAO为专利信息增删改查接口，ClassificationDAO为分类查询接口。 </span><span class="green">类图与方法如图3-5所示。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">163</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">图 3-5数据访问对象类图 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">164</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">3.4 图像特征与相似度计算 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">165</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><a href="../sentence_detail/334.htm" target="right" class="orange">颜色、形状、纹理或三者的结合是外观专利的主要保护对象，因此也可以作为外观专利图像识别的主要图像特征。</a><span class="green">下面介绍本系统中主要使用的三种特征提取算法的选取过程与选取思路。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">166</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">3.4.1 颜色特征 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">167</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">主要的颜色特征提取方式包括， </span><a href="../sentence_detail/338.htm" target="right" class="red">颜色直方图(ColorHistogram) 、颜色相关图(ColorCorrelogram) 、颜色矩(ColorMoment) 、颜色一致性矢量(Color Coherence Vectors,</a><span class="green"> CCV)等。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">168</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><a href="../sentence_detail/340.htm" target="right" class="red">颜色直方图是最常用也是最简单的颜色特征提取方式，描述了图像颜色的统计分布特性，其核心思想是使用颜色空间，如RGB，CIE，HSI，</a><a href="../sentence_detail/341.htm" target="right" class="red">HSV等空间对图像的颜色进行量化，然后统计每一个量化在整幅图像的颜色集中所占的比重。</a><span class="green">颜色直方图在某些颜色区块整体位移的图像中，很难区分两张图片的具体区别，因此有了颜色相关图这一特征提取方法， </span><span class="green">颜色相关图其主要思想是改进颜色直方图没有有效的表示颜色之间的相对关系这一特点，用颜色对相对于距离的分布来描述图像特征信息， </span><a href="../sentence_detail/344.htm" target="right" class="red">该特征反映了像素对的空间相关性，以及局部像素分布和总体像素分布的相关性，特点是容易计算，特征范围小，效果好。</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">169</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><a href="../sentence_detail/345.htm" target="right" class="red">假设图像的记号为I(x,y)（x、y为空间坐标），颜色集合包含C1,C2,C3...Cn。</a><span class="green">设置两种颜色之间的距离d。 </span><a href="../sentence_detail/347.htm" target="right" class="orange">可以得到直方图：Bin的个数为n的平方（颜色的组合数目），对于其中Bin表示为公式2-1（其中，||*||表示像素值为Ci,</a><span class="green">Cj的两个像素的空间距离）。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">170</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">                                        (3-1) </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">171</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><a href="../sentence_detail/350.htm" target="right" class="red">当设置不同的距离d1，d2，d3...dm(共D个)，Bin的维数为(n*n*D)。</a><a href="../sentence_detail/351.htm" target="right" class="red">再进一步，如果只考虑相同颜色之间空间关系，就称为颜色自相关图(color auto-correlogram)，Bin的维数为(n*D)。</a><a href="../sentence_detail/352.htm" target="right" class="orange">本系统中颜色特征提取使用的就是颜色自相关图。</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">172</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">3.4.2 形状特征 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">173</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><a href="../sentence_detail/354.htm" target="right" class="orange">形状是图像最本质也是最难以刻画的最主要的特征，刻画的难度在于对图像中感兴趣目标的分割。</a><a href="../sentence_detail/355.htm" target="right" class="red">对形状特征的提取主要方式是寻找几何不变量。</a><a href="../sentence_detail/356.htm" target="right" class="red">目前用于图像检索的形状特征描述有基于边缘和基于区域的形状两种主要的方法。</a><a href="../sentence_detail/357.htm" target="right" class="red">基于边缘形状特征利用图像的边缘信息基于区域形状特征则是利用区域内的灰度分布信息。</a><span class="green">专利图像不仅是对外部轮廓的表示，还应该包括专利图像的内部轮廓信息，传统的基于轮廓的形状特征描述方式，只简单利用到了图像外层的轮廓信息， </span><span class="green">这种描述方式会损失专利图像的内部轮廓特征，导致信息的不准确性，严重影响系统对形状的识别率。 </span><a href="../sentence_detail/360.htm" target="right" class="orange">本系统的检索使用的主要为边界直方图(edge histogram)。</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">174</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">3.4.3 纹理特征 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">175</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><a href="../sentence_detail/362.htm" target="right" class="red">纹理特征描述方法大致可以分为四类：统计法、结构法、模型法、频谱法。</a><a href="../sentence_detail/363.htm" target="right" class="orange">Gabor滤波是一种频谱法提取图像纹理特征的算法。</a><a href="../sentence_detail/364.htm" target="right" class="red">Gabor变换本质属于加窗傅立叶变换，Gabor函数可以在频域不同尺度、不同方向上提取相关的特征。</a><a href="../sentence_detail/365.htm" target="right" class="red">Gabor 滤波器的频率和方向与人类的视觉系统非常相似，所以常用于纹理特征提取与识别。</a><a href="../sentence_detail/366.htm" target="right" class="red">在空间域，二维Gabor滤波器是一个高斯核函数和正弦平面波的乘积，它的公式化定义为（其中，&lambda;：正弦函数波长，&theta;：Gabor核函数的方向，ψ：相位偏移，</a><a href="../sentence_detail/367.htm" target="right" class="red">σ：高斯函数的标准差，&gamma;： 空间的宽高比）：</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">176</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">                          (3-2) </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">177</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">                            (3-3) </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">178</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">                            (3-4) </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">179</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">                                                       (3-5) </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">180</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">                                                      (3-6) </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">181</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">3.4.4 图像相似度计算 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">182</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><a href="../sentence_detail/374.htm" target="right" class="orange">本文的核心是通过基于Hadoop框架的分布式计算来解决图像检索大数据量的问题，由于建立的专利图像特征库已经将所有专利图像的特征进行提取并存储，</a><span class="green">因此需要进行分布式计算的主要为图像的特征值匹配过程。 </span><span class="green">本节中主要对两幅图像的相似性计算进行设计描述。 </span><span class="green">假设待检索图像为P0，专利库中已经提取过特征的专利图像为Pi（i取值范围为1&hellip;. </span><span class="green">I，I表示专利库图像数量）。 </span><span class="green">用Dc（P0，Pi），Ds（P0，Pi）,，Dt（P0，Pi）表示待检索图像与某个视图的颜色、形状，纹理相似度， </span><span class="green">其中对于形状和纹理的相似度分别为特征值的欧氏距离，颜色相似度为直方图相交距，并欧氏距离与相交距做归一化处理。 </span><span class="green">最终计算得到的特征融合相似度 D，表示为公式3-7（其中C1，C2，C3分别为相似度的权值，和为1）： </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">183</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">                                            (3-7) </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">184</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">相似度计算中，以形状特征为主。 </span><a href="../sentence_detail/384.htm" target="right" class="orange">图像颜色特征以颜色相关直方图描述，图像形状特征使用边界直方图描述，纹理特征采用Gabor滤波方式进行描述。</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">185</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">3.5 检索系统  </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">186</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">检索系统包括文本检索，图像检索和分布式图像检索。 </span><span class="green">文本检索只要通过专利号，专利名，专利描述，申请号，申请日期，申请人，发明人，公开号，公开日期，颁证日，主分类，次级分类等字段进行数据库模糊检索， </span><span class="green">图像检索与分布式图像检索采用相同的图像检索算法，只是后者使用Hadoop框架进行分布式计算。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">187</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">3.5.1 文本检索设计 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">188</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">文本检索功能流程为用户通过浏览器页面填写检索条件，如专利号，专利名，专利描述，申请号，申请日期，申请人，发明人，公开号，公开日期，颁证日，主分类， </span><span class="green">次级分类等信息，并判断输入的信息是否合法。 </span><span class="green">当不合法时候，浏览器跳转回检索界面，等待用户输入合法的检索条件，当用户输入的信息合法之后，浏览器将检索条件提交给Web服务器， </span><span class="green">Web创建SearchInfo对象， </span><span class="green">传递该对象并调用PatentDAO的SearchPatent(SearchInfo si)方法获取检索结果， </span><span class="green">结果是一个List&lt;PatentInfos&gt;对象，将该列表对象返回给用户，用户可以通过某个专利编号链接，访问专利的详细信息。 </span><span class="green">如图3-6所示，为文本检索过程时序图。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">189</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">图 3-6文本检索返回结果页过程 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">190</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">3.5.2 图像检索 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">191</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><a href="../sentence_detail/399.htm" target="right" class="orange">如图3-7所示，对于外观专利图像的普通检索过程，可以表示为：</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">192</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">（1）读取数据库中的外观专利图像信息，将本地文件系统中的图像进行特征提取(特征包括形状、纹理以及颜色，分别将特征以字符串形式进行存储)， </span><span class="green">提取结果为&quot;图像文件名@外观专利编号@颜色特征###形状特征###纹理特征&rdquo;字符串的形式，并对特征进行存储，形成外观专利图像特征库， </span><span class="green">以文本形式进行保存。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">193</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">(2)当用户提交一幅图像进行图像检索时，系统对缓存的待检索图像进行特征提取，特征提取的方式与外观专利图像库提取的特征相同，并且格式保持一致。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">194</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><a href="../sentence_detail/404.htm" target="right" class="orange">(3)将待检索图像的特征与外观专利图像库中的特征进行实例化，</a><span class="green">创建检索对象通过检索方法对两个对象进行匹配(逐条读取特征库文本文件中的记录进行相似度计算，并按照相似度由大到小进行排序，去掉重复的专利)， </span><a href="../sentence_detail/406.htm" target="right" class="orange">得到图像检索结果，结果以专利编号、描述、相似度的形式进行呈现。</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">195</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">图3-7 图像检索过程 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">196</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><a href="../sentence_detail/408.htm" target="right" class="orange">基于内容的图像检索主要过程是是待检索图像与图像特征库中图像特征的相似度计算。</a><span class="green">图像特征的包括形状、纹理以及颜色等多维特征融合。融合原理为对每种特征的相似度进行加权计算。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">197</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">3.5.3 基于Hadoop的图像检索 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">198</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">对于一个检索的任务中大数据量问题，通过Hadoop框架的分布式使用，实现了对待检索图像特征值提取之后在特征库中进行分布式检索的过程。 </span><a href="../sentence_detail/412.htm" target="right" class="red">MapReduce是Hadoop框架的核心组成，是专门用于数据计算。</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">199</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><a href="../sentence_detail/413.htm" target="right" class="red">对于Hadoop的Map函数和Reduce函数，处理的数据是键值对，也就是说 Map 函数接收的数据与输出的数据是两个参数的键值对的形式，</a><a href="../sentence_detail/414.htm" target="right" class="red">同样Reduce函数接收的数和输出的结果也是键值对。</a><span class="green">因此系统中分布式计算的工作主要就是重写Map类和Reduce类的MapReduce函数。 </span><span class="green">经过上文中对图像检索过程的分析，可以设计分布式图像检索过程图3-8所示。 </span><span class="green">图像特征库经过系统的导出保存为文本文件形式，其中每条记录表示为一行字符串，其形式为&quot;图像文件名@外观专利编号@颜色特征###形状特征###纹理特征&rdquo;， </span><span class="green">专利的颜色，形状，纹理特征都已经在到处的过程中进行计算，这是由于外观专利的图像变动不大，特征计算一次可以永久使用，因此不必要每次都进行特征计算， </span><span class="green">避免重复的大数据量操作，降低效率。 </span><a href="../sentence_detail/420.htm" target="right" class="orange">将外观专利图像特征库上传到Hadoop集群的HDFS文件系统。</a><span class="green">方便MapReduce程序的访问，以及可以通过HDFS的安全存储和分布式存储等特点，提高MapReduce读取特征库的速度。 </span><span class="green">进行检索时，主函数设置Map类和Reduce类，并对输入的图像进行特征提取，特征提取算法使用的是与导出专利库时候使用的算法是一样的。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">200</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">Map函数执行的主要功能为对输入的专利特征值进行图像特征匹配实例化，与主函数计算出的待检索图像特征值一起组成一个检索对， </span><span class="green">进行计算得出这两个特征值之间的的归一化相似度，以专利编号作为键，以特征值相似度作为值进行作业提交。 </span><span class="green">合并每个Map输出的结果，作为输入传递给Reduce函数，Reduce对处理过的专利编号-相似度这一对键值对进行最终的处理，取相同编号中最大的相似度， </span><span class="green">输出得到检索最终结果。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">201</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><a href="../sentence_detail/427.htm" target="right" class="red">图3-8 基于MapReduce的图像检索过程</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">202</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">根据以上分布式计算设计以及系统架构设计， </span><a href="../sentence_detail/429.htm" target="right" class="orange">外观专利图像检索在Hadoop这一分布式框架下的MapReduce分布式计算过程可以用一下进行描述，过程如图3-8：</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">203</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green"> (1)提交检索请求：Web接收到用户提交的图像信息以及分布式图像处理请求，将图像缓存单本地目录，并调用Hadoop命令， </span><a href="../sentence_detail/431.htm" target="right" class="red">运行编译好的MapReduce程序Jar包。</a><span class="green">命令提交后， </span><a href="../sentence_detail/433.htm" target="right" class="orange">Hadoop通过JobClient向JobTracker请求一个作业ID进行分布式图像检索作业，</a><span class="green">JobTracker通过Hadoop命令提供的Jar文件信息， </span><span class="green">以及运行参数（运行参数包括待检索图像文件路径、特征库输入路径以及检索结果输出路径）检查作业的相关信息，通过初始化的配置， </span><span class="green">加载Mapper类和Reducer类，此过程中，待检索图像的特征值也同时进行计算，并将计算出的特征值放入全局配置中， </span><a href="../sentence_detail/437.htm" target="right" class="orange">方便每个Mapper的map函数都可以访问到，同时，计算每个TaskTracker节点外观专利特征库的输入情况，将特征库分割成大小相同的块，</a><a href="../sentence_detail/438.htm" target="right" class="orange">将作业资源进行复制，创建TaskRunnable对象为作业运行做准备。</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">204</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><a href="../sentence_detail/439.htm" target="right" class="orange">（2）MapReduce初始化与分配：JobTracker接到JobClient请求的作业任务，将作业初始化之后放入一个作业任务队列中。</a><span class="green">JobTracker将输入数据即特征库进行划分，划分成相同大小的块，每个块分配一个Job， </span><span class="green">JobTracker将每个Job和数据块尽量分配给相同的节点，即执行Job的TaskNode和存放数据的DataNode尽量保证是同一个。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">205</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><a href="../sentence_detail/442.htm" target="right" class="orange">（3）Map处理：每个TaskTracker接收到JobTracker分配的Job，将作业资源中的Map类进行本地化，并获取Job对应的划分的数据块，</a><span class="green">对每个块中的每一行，作为参数执行输入给Mapper类的map函数，即继承MapRunnable的类从特征数据块中读取一个的图像特征记录， </span><span class="green">然后依次调用Mapper的map函数，map函数做的事情包括，读取全局待检索图像的特征值，创建检索对象，输入读取到的特征值， </span><span class="green">将两个特征值进行计算相似度，将结果使用专利编号-相似度的形式作为键值对输出。 </span><a href="../sentence_detail/446.htm" target="right" class="red">该输出结果将作为Reducer的输入。</a><a href="../sentence_detail/447.htm" target="right" class="orange">每一个map过程执行完之后，发出信号通知TaskTracker任务完成。</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">206</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><a href="../sentence_detail/448.htm" target="right" class="red">（4）Reduce处理：对于每一个Job，JobTracker都记录了TaskTracer和map输出的对应关系。</a><span class="green">JobTracker创建的Reducer任务周期性访问JobTracker，请求Mapper的输出结果，当某个数据块处理完成后， </span><span class="green">Reducer的reduce函数对map结果进行处理，此过程中，对相同键的输入进行去重复操作， </span><span class="green">即检索图像对于同一个外观专利的（相同编号）的不同视图有着不同的相似度，只需要记录同一个键的最大相似度的值就可以。 </span><span class="green">Reduce处理后得到的结果为一项外观专利与检索图像的相似度。 </span><span class="green">Reducer将结果以键值对的形式输出到HDFS中，以文本形式进行分布式存储。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">207</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">（5）检索请求的完成：所有Job完成后，JobTracker清除作业相关信息，将作业执行结果反馈给用户。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">208</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">（6）后期处理：将分布式存储的文本信息获取到本地，通过读取文件将结果进行处理，经Web服务器将结果反馈给用户， </span><span class="green">通过浏览器可以查看到检索出的专利编号以及相似度等信息，访问专利编号链接，可以查看专利的详细信息。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">209</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">3.6 其他功能 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">210</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">为保证结果的严谨性以及大数据量要求，需要对专利库进行建立，这里有两种建立专利库的方式，一是人工一条条记录的添加，通过人工的方式填写外观专利信息表单， </span><span class="green">内容包括专利号，专利名，专利描述，申请号，申请日期，申请人，发明人，公开号，公开日期，颁证日，主分类，次级分类，选择本地的专利视图图片，提交插入。 </span><span class="green">而是通过爬虫的方式，将国家专利局特定外观专利信息进行解析获取，保存到本地文件系统和数据库。 </span><a href="../sentence_detail/461.htm" target="right" class="red">下面将分别介绍这两种数据库建立方式。</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">211</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">3.6.1 专利上传设计 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">212</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">外观专利的信息主要包括内容包括专利号，专利名，专利描述，申请号，申请日期，申请人，发明人，公开号，公开日期，颁证日，主分类，次级分类等，以及六视图， </span><span class="green">立体图等图像信息。 </span><span class="green">专利上传操作具体过程可以描述为： </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">213</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">（1）用户输入专利的专利号，专利名，专利描述，申请号，申请日期，申请人，发明人，公开号，公开日期，颁证日，主分类，次级分类等信息并选择本地图片， </span><span class="green">提交添加专利请求，将填写的信息以及选择的文件提交给Web服务器。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">214</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">（2）服务器将图像进行本地存储，创建专利信息对象，将用户提交的信息进行格式化处理，并检查是否合法。 </span><span class="green">返回图像存储的相对路径，并计算图像的特征值，将特征值保存到相应的外观专利图像信息对象中。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">215</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">（3）通过数据访问对象将创建的外观专利信息插入数据库，返回插入的专利编号自增值，通过自增值插入对应的图像信息。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">216</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">（4）将图像信息通过浏览器返回给用户，提示插入成功或插入错误等相关信息。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">217</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">3.6.2 专利获取设计 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">218</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">通过人工方式一笔笔上传专利信息速度慢，而且无法保证上传过程中信息的准确性等问题，因此可以通过编写爬虫的方式对国建专利局网站上的外观专利信息获取， </span><span class="green">并将专利信息添加到本地数据库将图像信息保存到本地文件系统。 </span><span class="green">该过程可以描述为： </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">219</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">（1）输入需要获取的主分类编号、二级分类编号、获取专利列表页数、每页多少条专利，向国家专利局网站的发起查询请求，获取特定分类的所有专利列表。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">220</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">（2）通过获取到的专利列表的专利申请编号，请求每一条专利的详细信息页面，对页面进行解析，得到需要的Html节点的信息，以及图片链接。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">221</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">（3）创建专利信息对象，将图像获取到本地文件系统，计算图像特征值，插入专利信息，遍历特定分类的查询结果列表，将所有专利信息获取到本地。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">222</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">3.6.3 专利图像特征值导出 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">223</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">图像特征库由于专利信息几乎没有变动的特点，因此存储方式限制较低，既可以存储到数据库中，也可以导出到文本文件中，然后存储到HDFS中进行分块存储， </span><span class="green">既通过数据备份等Hadoop特性，保证数据的安全性，也方便MapReduce程序的读取方便。 </span><span class="green">由于数据库设计中专利图像特征值存储使用一个字段存储存储颜色、形状、纹理的特征。 </span><span class="green">因此导出使用的形式为每个外观专利图像为一行，表示格式为&quot;图像文件名@外观专利编号@颜色特征###形状特征###纹理特征&rdquo;， </span><span class="green">这样方便MapReduce对数据读取。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">224</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">4 系统实现 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">225</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">本章节介绍了系统功能的实现，包括主要代码、代码注释、实现思路以及实现效果展示等。 </span><span class="green">主要介绍的实现为数据模型及数据访问对象、图像特征提取匹配算法、文本检索以及结果展示、专利库建立（用户添加外观专利和批量获取专利信息到本地）以及图像检索的实现。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">226</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">4.1 数据模型及数据访问对象 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">227</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">4.1.1 数据模型 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">228</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">数据模型实现的类分别为记录专利文字信息（如专利号，专利名，专利描述，申请号，申请日期，申请人，发明人，公开号，公开日期，颁证日，主分类， </span><span class="green">次级分类）的PatentInfo类、记录外观专利所有信息（如文字、图像路径等信息）的PatentInfoAll、记录作为返回结果对象表示检索图像检索结果条目的PatentInfos类、检索结果比较大小（用来对集合排序）的PatentInfosComparator类以及其他如PatentView、PatentViewItem、SearchInfo等。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">229</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">4.1.2 专利信息 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">230</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">该类主要功能为专利文本检索、获取专利的详细信息、专利的增删改查、专利特征值的增删、以及为其他功能获取专利特定信息提供接口如导出专利特征库所需要的获取格式化后的外观专利图像特征及其专利信息等功能。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">231</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">public class PatentDAO { </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">232</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">	//省略部分代码 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">233</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">	//根据专利编号获取专利所有信息 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">234</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">	public PatentInfoAll getPatentInfoAll(String PId) {&hellip;} </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">235</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">	//根据查询条件 返回查询专利编号列表结果 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">236</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">	public List&lt;String&gt; Search(PatentInfoAll info) {&hellip;} </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">237</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">	//插入专利 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">238</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">	public void InsertPatentInfoAndView(PatentInfoAll patent) {&hellip;} </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">239</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">	//插入图像及其特征值 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">240</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">	public void InsertPatentView(PatentViewItem view) {&hellip;} </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">241</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">	//修改图像及其特征值 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">242</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">	public void UpdatePatentView(PatentViewItem view) {&hellip;} </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">243</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">	//根据视图种类获取特定行数的图像信息  </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">244</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><a href="../sentence_detail/507.htm" target="right" class="orange">	//返回值作为输出到文本的格式化字符串</a><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">245</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">	public List&lt;String&gt; SearchView(String view, String limit, String row) {&hellip;} </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">246</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">247</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">4.2 特征提取与匹配 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">248</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">4.2.1 公共接口IImageFeature </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">249</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">为特征提取与匹配方式提供公共接口IImageFeature，接口主要提供的需要实现的方法有： </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">250</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">（1）extract(BufferedImage image)，传入BufferImage对象对图像进行特征计算提取。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">251</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">（2）getDistance(IImageFeature feature)，与实现IImageFeature接口的相同类型的对象计算获取相似度， </span><span class="green">这里相似度使用欧氏距离、矩阵相交距等表示。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">252</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">（3）getStringRepresentation()，获取专利特征值字符串表示。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">253</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">（4）setStringRepresentation(String featureVector)， </span><span class="green">通过字符串初始化实现IImageFeature接口的类型对象的内部特征矩阵，不需要每次通过图像初始化特征矩阵，方便重复使用计算相似度。 </span><p></p></div><div> <p></p><table border="0" width="100%" cellspacing="0" cellpadding="0"><tbody><tr><td align="left" width="50"><div class="shubu">254</div></td> <td>&nbsp;&nbsp;</td></tr></tbody> </table><span style="margin-left: 25px"></span><span class="green">public interface IImageFeature { </span><p></p></div><div><span style="margin-left: 25px"></span>[<a class="pagelink"href="paper_1.htm">首页</a>&nbsp<a class="pagelink" href="paper_1.htm">上一页</a>&nbsp<a class="pagelink" href="paper_3.htm">下一页</a>&nbsp<a class="pagelink" href="paper_4.htm">尾页</a>&nbsp页码：2/4页]</div> </div><div class="zhengwencenter"><p>检测报告由<a href="http://www.papertest.org" target="_blank">PaperTest</a>文献相似度检测系统生成</p><p>Copyright © 2007-2014 PaperTest.</p></div><div style="margin-bottom: 400px"></div></body></html>